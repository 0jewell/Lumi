"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5296],{53432:e=>{e.exports=JSON.parse('{"functions":[{"name":"payload","desc":"    ","params":[{"name":"package","desc":"","lua_type":"{}"}],"returns":[{"desc":"","lua_type":"(eventName: string, data: {})"}],"function_type":"static","source":{"line":56,"path":"src/Structure/Serializer.lua"}},{"name":"data","desc":"    ","params":[{"name":"rawData","desc":"","lua_type":"{}"},{"name":"factory","desc":"","lua_type":"(args...) -> model"}],"returns":[{"desc":"Caution: this data is freezed and cannot be modified.","lua_type":"(data: container)"}],"function_type":"static","source":{"line":78,"path":"src/Structure/Serializer.lua"}}],"properties":[],"types":[],"name":"Serializer","desc":"Page destined to people that want to help and extend Lumi.\\n\\n:::caution Sensitive\\n    Data inside components are sensitive and could break Lumi if changed.  \\n    Do not change or create components without reading the docs information.\\n:::\\n\\nA specific usage class used to desserialize Discord objects \\nand serialize it to an readable table","private":true,"source":{"line":44,"path":"src/Structure/Serializer.lua"}}')}}]);