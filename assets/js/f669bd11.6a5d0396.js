"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4716],{64596:e=>{e.exports=JSON.parse('{"functions":[{"name":"setName","desc":"Sets the name of the command.\\n\\n\\n    ","params":[{"name":"name","desc":"","lua_type":"string"}],"returns":[{"desc":"Returns the builder object for chaining methods.","lua_type":"CommandBuilder"}],"function_type":"static","source":{"line":91,"path":"src/Structure/Builders/Command.luau"}},{"name":"setDescription","desc":"Sets the description of the command.\\n\\n\\n    ","params":[{"name":"description","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"CommandBuilder"}],"function_type":"static","source":{"line":107,"path":"src/Structure/Builders/Command.luau"}},{"name":"setType","desc":"Sets the type of the command.\\n\\n\\n    ","params":[{"name":"type","desc":"The type of the command. Available in Lumi.Enums","lua_type":"ApplicationCommandType"}],"returns":[{"desc":"","lua_type":"CommandBuilder"}],"function_type":"static","source":{"line":124,"path":"src/Structure/Builders/Command.luau"}},{"name":"addOption","desc":"Adds an option to the command.\\n\\n\\n    ","params":[{"name":"option","desc":"","lua_type":"OptionBuilder"}],"returns":[{"desc":"","lua_type":"CommandBuilder"}],"function_type":"static","source":{"line":140,"path":"src/Structure/Builders/Command.luau"}},{"name":"enableNSFW","desc":"Marks the command as NSFW.\\n\\n\\n    ","params":[],"returns":[{"desc":"","lua_type":"CommandBuilder"}],"function_type":"static","source":{"line":159,"path":"src/Structure/Builders/Command.luau"}},{"name":"setContexts","desc":"Sets the contexts for the command.\\n\\n\\n    ","params":[{"name":"contexts","desc":"","lua_type":"{InteractionContextType}"}],"returns":[{"desc":"","lua_type":"CommandBuilder"}],"function_type":"static","source":{"line":176,"path":"src/Structure/Builders/Command.luau"}},{"name":"get","desc":"Retrieves the constructed command.\\n\\n:::caution\\nNo need to do this manually. Lumi handles already handles it.\\n:::\\n\\n\\n    ","params":[],"returns":[{"desc":"The constructed command.","lua_type":"Command"}],"function_type":"static","source":{"line":196,"path":"src/Structure/Builders/Command.luau"}}],"properties":[],"types":[{"name":"ApplicationCommandType","desc":"The type of the command. Available at [Enums](/api/Enums).","lua_type":"number","source":{"line":96,"path":"src/Enums.luau"}},{"name":"InteractionContextType","desc":"The contexts the command can be used. Available at [Enums](/api/Enums).","lua_type":"number","source":{"line":121,"path":"src/Enums.luau"}},{"name":"Command","desc":"contexts: {InteractionContextType}","fields":[{"name":"name","lua_type":"string","desc":""},{"name":"description","lua_type":"string","desc":""},{"name":"type","lua_type":"ApplicationCommandType","desc":""},{"name":"options","lua_type":"{Option}","desc":""},{"name":"nsfw","lua_type":"boolean","desc":""}],"source":{"line":35,"path":"src/Structure/Builders/Command.luau"}}],"name":"CommandBuilder","desc":"A builder class for creating application commands.\\n\\n:::info\\nThis class is used to construct application commands for a Discord bot.\\n:::","source":{"line":66,"path":"src/Structure/Builders/Command.luau"}}')}}]);