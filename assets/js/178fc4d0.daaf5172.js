"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8308],{70210:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"GettingStarted/SettingUp","title":"Starting a new project","description":"This page assumes that you have read and completed the steps available at Installation.","source":"@site/docs/GettingStarted/SettingUp.md","sourceDirName":"GettingStarted","slug":"/GettingStarted/SettingUp","permalink":"/Lumi/docs/GettingStarted/SettingUp","draft":false,"unlisted":false,"editUrl":"https://github.com/0jewell/Lumi/edit/main/docs/GettingStarted/SettingUp.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Application bot","permalink":"/Lumi/docs/GettingStarted/Application"},"next":{"title":"Listening to events","permalink":"/Lumi/docs/GettingStarted/ListeningEvents"}}');var o=t(74848),s=t(28453);const r={sidebar_position:2},a="Starting a new project",c={},l=[{value:"Getting your bot online",id:"getting-your-bot-online",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"starting-a-new-project",children:"Starting a new project"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["This page assumes that you have read and completed the steps available at ",(0,o.jsx)(n.a,{href:"/Lumi/docs/Installation",children:"Installation."})]})}),"\n",(0,o.jsx)(n.p,{children:"After following the installation page, your repository should be like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"libs/\r\n  Lumi/\r\nsrc/\r\n  bot.lua\n"})}),"\n",(0,o.jsx)(n.h3,{id:"getting-your-bot-online",children:"Getting your bot online"}),"\n",(0,o.jsxs)(n.p,{children:["Lumi package has 3 importants modules inside it: Manager, Session and Events.\r\nThe main interface for interacting with Discord is the Session module, it is your client. You can check more about it ",(0,o.jsx)(n.a,{href:"/api/Session",children:"on its API page."})]}),"\n",(0,o.jsxs)(n.p,{children:["Now, lets open a connection to Discord and make your bot go online. On your ",(0,o.jsx)(n.code,{children:"main.lua"})," put this code:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:"--// Require Lumi\r\nlocal Lumi = require '../libs/Lumi'\r\n\r\n--// Session is a factory function that returns our Session component.\r\nlocal Session = Lumi.session()\r\n\r\n--// Authenticate your token in the Discord API\r\nSession.login('YOUR_BOT_TOKEN')\r\n\r\n--// Open gateway connection, your bot should go online now\r\nSession.connect()\n"})}),"\n",(0,o.jsx)(n.p,{children:"In the next page, you will learn how to listen and get information on events."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(96540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);